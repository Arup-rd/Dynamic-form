{"version":3,"sources":["Data/formData.js","FormItem.jsx","Form.jsx","App.js","index.js"],"names":["Data","fields","type","content","name","label","placeholder","required","validation_message","options","doctor","engineer","teacher","other","valid","invalid","EmailField","data","item","Item","rules","message","TextField","SelectField","Object","keys","map","option","index","Option","value","key","RadioField","Group","style","display","height","lineHeight","checked","FormItem","props","ReactHtmlParser","DynamicForm","console","log","className","scrollToFirstError","labelCol","xs","span","sm","wrapperCol","width","offset","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49c13456.chunk.js","sourcesContent":["export const Data = {\r\n  fields: [\r\n    {\r\n      type: 'info_html',\r\n      content: '<h3>Please fill up the following form</h3>'\r\n    },\r\n    {\r\n      name: 'first_name',\r\n      type: 'text',\r\n      label: 'First Name',\r\n      placeholder: 'First Name',\r\n      required: true,\r\n      validation_message: 'First name is required'\r\n    },\r\n    {\r\n      name: 'email',\r\n      label: 'Email',\r\n      type: 'email',\r\n      placeholder: 'Email',\r\n      required: true,\r\n      validation_message: 'Email is required'\r\n    },\r\n    {\r\n      name: 'ocupation',\r\n      type: 'multi-select',\r\n      label: 'Ocupation',\r\n      placeholder: 'Select Ocupation',\r\n      required: true,\r\n      validation_message: 'Ocupation is required',\r\n      options: [\r\n        {\r\n          doctor: 'Doctor',\r\n          engineer: 'Engineer',\r\n          teacher: 'Teacher',\r\n          other: 'Other'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: 'status',\r\n      type: 'radio',\r\n      label: 'Status',\r\n      required: true,\r\n      validation_message: 'Status is required',\r\n      options: [\r\n        {\r\n          valid: 'Valid',\r\n          invalid: 'Invalid'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: 'internal_status',\r\n      type: 'select',\r\n      label: 'Internal Status',\r\n      required: true,\r\n      validation_message: 'Internal Status is required',\r\n      options: [\r\n        {\r\n          valid: 'Valid',\r\n          invalid: 'Invalid'\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}","import React from \"react\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Input, Select, Radio } from \"antd\";\r\n\r\nconst FormItem = (props) => {\r\n  const item = props.item;\r\n\r\n  if (item.type === \"info_html\") return ReactHtmlParser(item.content);\r\n  else if (item.type === \"email\") return <EmailField item={item} />;\r\n  else if (item.type === \"text\") return <TextField item={item} />;\r\n  else if (item.type === \"multi-select\" || item.type === \"select\")\r\n    return <SelectField item={item} />;\r\n  else if (item.type === \"radio\") return <RadioField item={item} />;\r\n  else return <Input />;\r\n};\r\n\r\nconst EmailField = (data) => {\r\n  const item = data.item;\r\n  return (\r\n    <Form.Item\r\n      name={item.name}\r\n      label={item.label}\r\n      rules={[\r\n        {\r\n          type: item.type,\r\n          message: \"The input is not valid E-mail!\",\r\n        },\r\n        {\r\n          required: item.required,\r\n          message: item.validation_message,\r\n        },\r\n      ]}\r\n    >\r\n      <Input />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nconst TextField = (data) => {\r\n  const item = data.item;\r\n  return (\r\n    <Form.Item\r\n      name={item.name}\r\n      label={item.label}\r\n      rules={[\r\n        {\r\n          required: item.required,\r\n          message: item.validation_message,\r\n        },\r\n      ]}\r\n    >\r\n      <Input />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nconst SelectField = (data) => {\r\n  const item = data.item;\r\n  return (\r\n    <Form.Item\r\n      name={item.name}\r\n      label={item.label}\r\n      rules={[\r\n        {\r\n          required: item.required,\r\n          message: item.validation_message,\r\n        },\r\n      ]}\r\n    >\r\n      <Select placeholder={item.placeholder}>\r\n        {Object.keys(item.options[0]).map((option, index) => (\r\n          <Select.Option value={option} key={index}>\r\n            {option}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nconst RadioField = (data) => {\r\n  const item = data.item;\r\n  return (\r\n    <Form.Item\r\n      name={item.name}\r\n      label={item.label}\r\n      rules={[\r\n        {\r\n          required: item.required,\r\n          message: item.validation_message,\r\n        },\r\n      ]}\r\n    >\r\n      <Radio.Group>\r\n        {Object.keys(item.options[0]).map((option, index) => (\r\n          <Radio\r\n            style={{\r\n              display: \"block\",\r\n              height: \"30px\",\r\n              lineHeight: \"30px\",\r\n            }}\r\n            key={index}\r\n            value={index}\r\n            checked\r\n          >\r\n            {option}\r\n          </Radio>\r\n        ))}\r\n      </Radio.Group>\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default FormItem;\r\n","import React from \"react\";\r\nimport { Form } from \"antd\";\r\nimport { Data } from \"./Data/formData\";\r\nimport FormItem from \"./FormItem\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./Form.css\";\r\n\r\nconst DynamicForm = () => {\r\n  const formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 8 },\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 16 },\r\n    },\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n\r\n  // const field = JSON.parse(Data)\r\n  console.log(Data.fields)\r\n\r\n  return (\r\n    <div className=\"FormContainer\">\r\n      <Form scrollToFirstError {...formItemLayout} style={{ width: '80%' }}>\r\n        {Data.fields.map((item, index) => (\r\n          <FormItem item={item} key={index} />\r\n        ))}\r\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n          <button type=\"submit\" value=\"Submit\" className=\"submitButton\">\r\n            Submit\r\n          </button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicForm;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport DynamicForm from \"./Form\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DynamicForm />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}